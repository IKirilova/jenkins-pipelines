#!groovy

import com.sap.piper.Utils

/**
 *	Copyright (c) 2017 SAP SE or an SAP affiliate company.  All rights reserved.
 *
 *	This software is the confidential and proprietary information of SAP
 *	("Confidential Information"). You shall not disclose such Confidential
 *	Information and shall use it only in accordance with the terms of the
 *	license agreement you entered into with SAP.
*/

@Library('oliver-piper-library-os@neoDeploy') _

node() {
  //Global variables:
  APP_PATH = 'src'
  SRC = "${WORKSPACE}/${APP_PATH}"

  stage("Clone sources and setup environment"){
    deleteDir()
    checkout([$class: 'GitSCM', 
              branches: [[name: params.GIT_BRANCH]], 
              doGenerateSubmoduleConfigurations: false, 
              extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: APP_PATH]], 
              submoduleCfg: [], 
              userRemoteConfigs: [[url: params.GIT_URL]]])
    commonPipelineEnvironment.setConfigProperties([ DEPLOY_HOST: params.DEPLOY_HOST,
                                                    CI_DEPLOY_ACCOUNT: params.DEPLOY_ACCOUNT,
                                                    neoCredentialsId: params.CREDENTIALS_ID])
    proxy = commonPipelineEnvironment.getConfigProperty('proxy') ?: ''
    httpsProxy = commonPipelineEnvironment.getConfigProperty('httpsProxy') ?: ''
  }

  stage("Build Fiori App"){
    dir(SRC){
      writeFile file: '.npmrc', text: """
                                      @sap:registry = ${params.SAP_NPM_REGISTRY}
                                      registry = ${params.NPM_REGISTRY}
                                      proxy = ${proxy}
                                      https-proxy = ${httpsProxy}
                                      """
      withEnv(["http_proxy=${proxy}", "https_proxy=${httpsProxy}"]) {
        MTAR_FILE_PATH = mtaBuild mtaJarLocation: env.MTA_HOME, buildTarget: 'NEO'
      }
    }
  }
  
  stage("Deploy Fiori App"){
    dir(SRC){
      withEnv(["http_proxy=${proxy}", "https_proxy=${httpsProxy}"]) {
        neoDeploy script: this, neoHome: env.NEO_HOME, archivePath: MTAR_FILE_PATH
      }
    }
  }
}


